generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Package {
  id         String          @id @db.VarChar(255)
  metadataId String          @unique
  dataId     String          @unique
  sizeCost   Int?          
  metadata   PackageMetadata @relation(fields: [metadataId], references: [id])
  data       PackageData     @relation(fields: [dataId], references: [id])
}

model PackageMetadata {
  id         String          @id @db.VarChar(255)
  name       String          @db.VarChar(255)
  version    String          @db.VarChar(255)
  package    Package?
  rating     PackageRating?
  historyEntries PackageHistoryEntry[]
}

model PackageData {
  id        String   @id @db.VarChar(255)
  S3Link    String   @db.VarChar(255)
  URL       String   @db.VarChar(255)
  JSProgram String   @db.VarChar(255)
  package   Package?
}

model PackageRating {
  id                   Int             @id @default(autoincrement())
  metadataId           String          @unique
  busFactor            Float
  correctness          Float
  rampUp               Float
  responsiveMaintainer Float
  licenseScore         Float
  goodPinningPractice  Float
  pullRequest          Float
  netScore             Float
  metadata             PackageMetadata @relation(fields: [metadataId], references: [id])
}

enum Action {
  CREATE
  UPDATE
  DOWNLOAD
  RATE
}

model PackageHistoryEntry {
  id         Int             @id @default(autoincrement())
  metadataId String          @unique
  metadata   PackageMetadata @relation(fields: [metadataId], references: [id])
  date       DateTime
  action     Action
}
